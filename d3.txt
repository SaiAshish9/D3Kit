#methods

.select()
.selectAll()
.append()
.enter()
.data()
.merge()
.remove()
.exit()
.classes()
.style()
.on()
.attr()
.scaleLinear()
.domain([])
.range([])
.property()
.extent()
.fill()
.domain(d3.extent(data,()=>data.price))


#scales and extents
yscale=d3.scaleLinear
          .domain(d3.extent(data))
          .range([height,0])
xscale=d3.scaleLinear
          .domain(d3.extent(data))
          .range([0,width])
          
       [height-padding,padding]   
       [padding,width-padding]
       
 var colorScale=d3.scaleLinear()
                  .domain(d3.extent....)
                  .range(['green','red'])
                  
                  .range([2,40])
                  
d3.select('svg')
   .attr("height",500)
   .attr("width',500)
   .selectAll('circle')
   .data()
   .enter()
   .append('circle')
     .attr('cx',xScale(x1/x))
     .attr('cy',yScale(y))
     .attr('fill',colorScale(--)))
     .attr('r',radiusScale(--))
   
#axis and gridlines
.axisTop,B,R,L

d3.select('svg')
   .append('g')
     .attr('transform','translate(0,'+(height-padding)+')')
     .call(d3.axisBottom(xScale)
     .tickSize(-height+2*padding)
     .tickSizeOuter(0)
     )



#style
.tick line{
stroke:#ccc
stroke-dasharray:10,5;
}


d3.select('svg')
   .append('g')
     .attr('transform','translate('+(width-padding)+'0,)')
     .call(d3.axisLeft(yScale).tickSize(-width+2*padding)
     
     
#labels
 
 d3.select('svg')
 .append('text')
 .attr('x',width/2)
 .attr('y',height-padding)
 .attr('dy','1.5rem')
 .style('text-anchor','middle')
 .text('dgfcghvjbk')
 
  d3.select('svg')
 .append('text')
 .attr('x',width/2)
 .attr('y',padding)
 .attr('dy','1.5rem')
 .style('text-anchor','middle')
 .text('dgfcghvjbk')
 
   d3.select('svg')
 .append('text')
 .attr('transform','rotate(-90)')
 .attr('x',-height/2)
 .attr('y',padding)
 .attr('dy','-1.1rem')
 .style('text-anchor','middle')
 .text('dgfcghvjbk')
 
 
 
